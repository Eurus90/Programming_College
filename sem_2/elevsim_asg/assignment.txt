Elevator Simulator -- Assignment

THIS ASSIGNMENT IS GRADED. IT WILL FORM PART OF YOUR CA



ELEVATOR SIMULATOR

This assignment will give you more experience on the use of:

    1. classes
    2. class methods
    3. object-oriented programming

The goal of this project is to gain more practice with classes and
Object-Oriented Programming. In this project, we are going to simulate a
simple elevator.

TASK

Your task is to implement the simple elevator in Python using classes. The
default strategy is the simple "start at the bottom, go to the top, then go to
the bottom". You don't have to use this, you can take an alternative approach
such as random start location for the elevator.


PROJECT DESCRIPTION / SPECIFICATION:

    1. Create three classes: Building, Elevator, and Customer.
    2. Equip the building with an elevator. Ask user to customize the number
       of floors and the number of customers.
    3. Program should have error checking to make sure the user inputs are 
       valid. For example, if a user gives non-integer inputs, notify the use
       that the inputs are incorrect and prompt again.
    3. Each customer starts from a random floor, and has a random destination
       floor.
    4. Each customer will use the elevator only once, i.e., when a customer 
       moves out of the elevator, he/she will never use it again.
    5. When all customers have reached their destination floor, the simulation
       is finished.
    7. Part of the grade on this assignment will be the appropriateness of 
       your classes, methods, and any functions you use. The quality of the 
       code will now matter as well as the performance.
    8. All classes’ methods require a docstring for a general description of 
       the method.
    9. Don’t use any global variables.

NOTES AND HINTS

In your main function, at the beginning ask the user for the number of floors
and the number of customers which can be used to create an instance of
Building. Then we only need to call a run method and an output (such as
__str__ or __repr__) method repeatedly in a while loop.

Randomly select the floors (to and from) for each customer. Use the randint
function from the random module. To estimate the efficiency of strategy, count
the number of floors visited for your strategy. Make a demo to create usable
output from your simulation
